/* STYLES */
/* ANIMATIONS */
@keyframes transparentFadeIn {
  0% {
    opacity: 0;
    /* start transparent */
    transform: translateY(-1rem);
    /* start up 10px */ }
  100% {
    opacity: 1;
    /* end visible */
    transform: translate(0);
    /* end at actual initial position */ } }

/* BASIC RESET OF ALL ELEMENTS AND PSEUDO-ELEMENTS*/
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  /* makes every elements inherit the box-sizing param we put in the body selector */
  /* border: 1px solid red; */ }

/* root */
html {
  font-size: 62.5%;
  /* since by default browsers has 16px font size but we want our rem units calc from 10px we use % */ }

body {
  /* Box-sizing makes the browsers calculate the borders and padding as part of the element's width/height */
  box-sizing: border-box;
  /* note that we used the *{} to makes every elements inherit from this property here */ }

body {
  /* BASIC RESET, IN BODY FOR INHERITANCE PURPOSES */
  font-family: "Montserrat", sans-serif;
  /* from google fonts */
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 1.7;
  color: #777; }

.heading-primary {
  color: #fff;
  margin-bottom: 6rem;
  /* make some space after this h1 group of spans and the A tag button after it */
  /* ANIMATIONS */
  animation-name: transparentFadeIn;
  /* Selecting custom animations from @keyframes in this css */
  animation-duration: 2.5s;
  /* duration-speed of the animation */
  animation-delay: 0.33s;
  /* wait 1 second before kicking the animation */
  animation-fill-mode: backwards;
  /* The animation will apply the values defined in the first relevant keyframe as soon as it is applied to the target, and retain this during the animation-delay period */ }
  .heading-primary--main {
    text-transform: uppercase;
    display: block;
    /* since span element by default are inline, we change to block so it occupy the whole width and break the line for the next element */
    font-size: 2rem;
    font-weight: 500;
    letter-spacing: .6rem;
    line-height: 2rem; }
  .heading-primary--sub {
    color: #FED731;
    display: block;
    font-size: 8rem;
    font-weight: 600;
    letter-spacing: .1rem; }

.heading-secondary {
  color: #777;
  display: block;
  font-size: 1.2rem;
  font-weight: 300;
  letter-spacing: .6rem;
  line-height: 1.6rem;
  text-transform: uppercase; }

/* BUTTONS */
.btn {
  /* BUTTON ANIMATIONS*/ }
  .btn:link, .btn:visited {
    /* :link and :visited are pseudo-class and are used to style element in different states */
    text-transform: uppercase;
    text-decoration: none;
    /* set to 'none' to remove any underline or other text decoration that are applied by default */
    padding: 1.5rem 4rem;
    /* top & bottom: 15px | left & right: 40px */
    display: inline-block;
    /* since A tags are simply text, we make it an inline-block so it takes its own line */
    border-radius: 10rem;
    /* maximum radius for button, gives a 'pill' shape */
    transition: all .15s;
    /* transition: all is the short way of assigning .2s to all transition-like properties, which animate any transition this class will have*/
    /* ANIMATIONS */
    animation-name: transparentFadeIn;
    /* Selecting custom animations from @keyframes in this css */
    animation-duration: 2.5s;
    /* duration-speed of the animation */
    animation-delay: 2.66s;
    /* wait 1 second before kicking the animation */
    animation-fill-mode: backwards;
    /* The animation will apply the values defined in the first relevant keyframe as soon as it is applied to the target, and retain this during the animation-delay period */ }
  .btn--yellow {
    background-color: #FED731;
    text-shadow: 0.1rem 0.1rem rgba(0, 0, 0, 0.15);
    /* make the text pop up a little*/
    color: #fff; }
  .btn:hover {
    transform: translateY(-0.3rem);
    /* move object up; is animated by transition: all .2s; in btn:hover */
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /* 0 offset X | 10px offset Y | 20px blur  */ }
  .btn:active {
    transform: translateY(-0.1rem);
    /* move object down from -3 to -1 when clicked */
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
    /* this shadow looks closer to the ground */ }

.row {
  max-width: 114rem;
  background-color: #eee;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    background-color: orangered;
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc(( 100% - 6rem ) / 2); }
  .row .col-1-of-3 {
    width: calc(( 100% - 2 * 6rem ) / 3); }
  .row .col-1-of-4 {
    width: calc(( 100% - 3 * 6rem ) / 4); }
  .row .col-2-of-3 {
    width: calc(2 * ((100% - 2 * 6rem ) / 3) + 6rem); }
  .row .col-2-of-4 {
    width: calc(2 * ((100% - 3 * 6rem ) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc(3 * ((100% - 3 * 6rem ) / 4) + 2 * 6rem); }

.header {
  height: 95vh;
  /* 95% of view height, helped by the html meta tag "viewport" */
  background-image: linear-gradient(to right bottom, rgba(39, 42, 51, 0.85), rgba(20, 22, 27, 0.85)), url(../img/header_bg_simon_champi.jpg);
  background-size: cover;
  /* whatever the size of the div, it will fit the image inside */
  background-position: top;
  /* make sure the top of the image always stay visible */
  background-color: #272A33;
  position: relative;
  /* makes children div with position absolute count top-left-right-bottom px relative to this parent div */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* Editing the polygon out of the div (x y, x y, x y...) */ }
  .header__logo-box {
    position: absolute;
    /* position the logo-box div relative to .header + 40px */
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 10rem;
    /* define logo image size */ }
  .header__text-box {
    position: absolute;
    /* position relative to .header */
    top: 50%;
    left: 50%;
    /* % is in relation to parent element */
    transform: translate(-50%, -50%);
    /* % in relation with to the element itself (this .text-box) */
    text-align: center;
    /* to center all text and A tags in this div */ }

.homepage__aboutme {
  height: 30rem;
  background-color: #272A33; }
